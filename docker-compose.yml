version: "3"
services:

  consul:
    profiles:
      - infra
    image: consul:1.15
    hostname: consul
    restart: on-failure
    ports:
      - "8500:8500"
    command:
      - "consul"
      - "agent"
      - "-server"
      - "-bootstrap-expect=1"
      - "-node=agent-one"
      - "-ui"
      - "-data-dir=/consul/data"
      - "-client=0.0.0.0"
      - "-config-dir=/consul/config"
    environment:
      CONSUL_BIND_INTERFACE: eth0
    volumes:
      - ".docker/volumes/consul:/consul/data"

  content:
    profiles:
      - app
    image: content:latest
    build:
        context: content
    depends_on:
      - validator
      - postgres_db
      - rabbitmq
      - consul
    environment:
      - SPRING_CLOUD_CONSUL_CONFIG_ENABLED=true
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_RABBITMQ_HOST=rabbitmq
    ports:
      - "8080:8080"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "http://127.0.0.1:8080/actuator/health" ]
      interval: 5s
      timeout: 5s
      retries: 50

  executor:
    profiles:
      - app
    image: executor:latest
    build:
      context: executor
    depends_on:
      - content
      - rabbitmq
      - consul
    environment:
      - SPRING_CLOUD_CONSUL_CONFIG_ENABLED=true
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_RABBITMQ_HOST=rabbitmq
    ports:
      - "8020:8020"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "http://127.0.0.1:8020/actuator/health" ]
      interval: 5s
      timeout: 5s
      retries: 50

  scheduler:
    profiles:
      - app
    image: scheduler:latest
    build:
      context: scheduler
    depends_on:
      - scheduler_postgres_db
      - rabbitmq
      - consul
    environment:
      - SPRING_CLOUD_CONSUL_CONFIG_ENABLED=true
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_RABBITMQ_HOST=rabbitmq
    ports:
      - "8040:8040"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "http://127.0.0.1:8040/actuator/health" ]
      interval: 5s
      timeout: 5s
      retries: 50

  validator:
    profiles:
      - app
    image: validator:latest
    build:
      context: validator
    depends_on:
      - rabbitmq
      - consul
    environment:
      - SPRING_CLOUD_CONSUL_CONFIG_ENABLED=true
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_RABBITMQ_HOST=rabbitmq
    ports:
      - "8060:8060"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "http://127.0.0.1:8060/actuator/health" ]
      interval: 5s
      timeout: 5s
      retries: 50

  postgres_db:
    profiles:
      - app
    image: postgres:16.2
    environment:
      - POSTGRES_DB=compose-postgres
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U compose-postgres -d compose-postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  scheduler_postgres_db:
    profiles:
      - app
    image: postgres:16.2
    environment:
      - POSTGRES_DB=compose-postgres
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    ports:
      - "5434:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U compose-postgres -d compose-postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  rabbitmq:
    profiles:
      - infra
    image: rabbitmq:3.11.6-management
    hostname: rabbitmq
    restart: on-failure
    environment:
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"